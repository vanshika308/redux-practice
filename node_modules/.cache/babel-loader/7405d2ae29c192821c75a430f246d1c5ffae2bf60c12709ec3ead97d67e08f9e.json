{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounterField: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounterField = !state.showCounterField;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = fa;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounterField","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","fa","store","reducer","counterActions","actions"],"sources":["D:/beginning of react/sharpener/redux-practice/src/store/index.js"],"sourcesContent":["import { createSlice,configureStore } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialCounterState={ counter: 0 ,showCounterField: true}\r\n\r\nconst counterSlice = createSlice({\r\n  name:'counter',\r\n  initialState: initialCounterState,\r\n  reducers:{\r\n    increment(state){\r\n      state.counter++\r\n    },\r\n    decrement(state){\r\n      state.counter--\r\n    },\r\n    increase(state,action){\r\n      state.counter = state.counter+action.payload\r\n    },\r\n    toggleCounter(state){\r\n      state.showCounterField=!state.showCounterField\r\n    }\r\n  }\r\n})\r\n\r\nconst initialAuthState={\r\n  isAuthenticated: false\r\n}\r\n\r\nconst authSlice =createSlice({\r\n  name:\"auth\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state){\r\n      state.isAuthenticated=true;\r\n    },\r\n    logout(state){\r\n      state.isAuthenticated=fa\r\n    }\r\n  }\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: counterSlice.reducer\r\n});\r\n\r\nexport const counterActions =counterSlice.actions;\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAACC,cAAc,QAAQ,kBAAkB;AAG7D,MAAMC,mBAAmB,GAAC;EAAEC,OAAO,EAAE,CAAC;EAAEC,gBAAgB,EAAE;AAAI,CAAC;AAE/D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAC,SAAS;EACdC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAC;IACPC,SAASA,CAACC,KAAK,EAAC;MACdA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACdA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MACpBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAACU,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAClBA,KAAK,CAACN,gBAAgB,GAAC,CAACM,KAAK,CAACN,gBAAgB;IAChD;EACF;AACF,CAAC,CAAC;AAEF,MAAMY,gBAAgB,GAAC;EACrBC,eAAe,EAAE;AACnB,CAAC;AAED,MAAMC,SAAS,GAAElB,WAAW,CAAC;EAC3BM,IAAI,EAAC,MAAM;EACXC,YAAY,EAAES,gBAAgB;EAC9BR,QAAQ,EAAE;IACRW,KAAKA,CAACT,KAAK,EAAC;MACVA,KAAK,CAACO,eAAe,GAAC,IAAI;IAC5B,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAC;MACXA,KAAK,CAACO,eAAe,GAACI,EAAE;IAC1B;EACF;AACF,CAAC,CAAC;AAEF,MAAMC,KAAK,GAAGrB,cAAc,CAAC;EAC3BsB,OAAO,EAAElB,YAAY,CAACkB;AACxB,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAEnB,YAAY,CAACoB,OAAO;AAEjD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}